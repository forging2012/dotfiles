# 服务端优化 /etc/sysctl.conf
# 1.https://github.com/shadowsocks/shadowsocks/wiki/Optimizing-Shadowsocks
# 2.https://github.com/iMeiji/shadowsocks_install/wiki/%E5%BC%80%E5%90%AFTCP-BBR%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95
# $ sysctl --system
# old system:
# $ sysctl -p /etc/sysctl.conf (default is this file, optianl argument)

# Show your congestion control status:
# $ sysctl net.ipv4.tcp_available_congestion_control
# $ sysctl net.ipv4.tcp_congestion_control

# If you use Supervisor, Make sure you have the following line in /etc/default/supervisor.
# Once you added that line, restart Supervisor (service stop supervisor && service start supervisor).
# $ ulimit -n 51200
# If you run shadowsocks in the background in other ways, make sure to add `ulimit -n 51200` in your init script.

#################################################

#提高整个系统的文件限制
fs.file-max = 51200

# increase TCP max buffer size settable using setsockopt()
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864

# default read buffer
net.core.rmem_default = 65536

# default write buffer
net.core.wmem_default = 65536

# max processor input queue
net.core.netdev_max_backlog = 4096

# 定义了系统中每一个端口最大的监听队列的长度,这是个全局的参数
# backlog默认会限制到128，而nginx默认为511。较大内存的Linux，65535数值一般就可以了。
net.core.somaxconn = 4096

#表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击
net.ipv4.tcp_syncookies = 1

#表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；
net.ipv4.tcp_tw_reuse = 1

# Warning: DO NOT ENABLE net.ipv4.tcp_tw_recycle!!!
#表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭；
#为了对NAT设备更友好，建议设置为0
net.ipv4.tcp_tw_recycle = 0

#修改系统默认的 TIMEOUT 时间。
net.ipv4.tcp_fin_timeout = 30

#表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为20分钟。
net.ipv4.tcp_keepalive_time = 1200

#表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为10000到65000。（注意：这里不要将最低值设的太低，否则可能会占用掉正常的端口！）
net.ipv4.ip_local_port_range = 10000 65000

#表示SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数。
net.ipv4.tcp_max_syn_backlog = 4096

#表示系统同时保持TIME_WAIT的最大数量，如果超过这个数字，TIME_WAIT将立刻被清除并打印警告信息。
net.ipv4.tcp_max_tw_buckets = 5000

#额外的，对于内核版本新于3.7.1的，我们可以开启tcp_fastopen：
#使用uname -r或uname -a命令查看内核版本
#net.ipv4.tcp_fastopen = 3

# increase Linux autotuning TCP buffer limit
net.ipv4.tcp_rmem = 4096 87380 67108864
net.ipv4.tcp_wmem = 4096 65536 67108864

# recommended for hosts with jumbo frames enabled
net.ipv4.tcp_mtu_probing=1

# 设置高延迟hybal，低延迟cubic；或使用下面的BBR（需4.9以上内核）
net.ipv4.tcp_congestion_control=hybla

# FOR GOOGLE BBR
#net.core.default_qdisc=fq
#net.ipv4.tcp_congestion_control=bbr
