# By https://github.com/weaming
# This file will be source by bash or zsh

# -------------------------------------------------------------------
# other script
# -------------------------------------------------------------------

alias weather="~/scripts/python/weather.py"
alias youdao="~/scripts/python/youdao.py"
alias redemo="~/scripts/python/redemo.py"

# -------------------------------------------------------------------
# enable color support of ls and also add handy aliases
# -------------------------------------------------------------------

if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# -------------------------------------------------------------------
# some pathes often used
# -------------------------------------------------------------------
export ulb='/usr/local/bin'

# -------------------------------------------------------------------
# some ls aliases
# -------------------------------------------------------------------
alias ll='ls -lFh'
alias la='ls -A'
alias l='ls -CF'
alias rm="rm -i"

# -------------------------------------------------------------------
# magic cd
# -------------------------------------------------------------------
function cdls() {
    builtin cd "$@" && ls -F
}

alias cd=cdls

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias dload="cd ~/Downloads"

# -------------------------------------------------------------------
# download all static files of one site
# -------------------------------------------------------------------
alias getsite="wget -r -k -p -np"

# -------------------------------------------------------------------
# Check OS
# -------------------------------------------------------------------
function checkos(){
    OS=unknown
    if [ -f /etc/redhat-release ];then
        OS=CentOS
    elif [ ! -z "`cat /etc/issue | grep bian`" ];then
        OS=Debian
    elif [ ! -z "`cat /etc/issue | grep Ubuntu`" ];then
        OS=Ubuntu
    elif [ ! -z "`cat /etc/issue | grep Mint`" ];then
        OS=LinuxMint
    else
        echo "Not support OS, Please reinstall OS and retry!"
        return 1
    fi
    echo "The System is $OS"
}

# -------------------------------------------------------------------
# golang env
# -------------------------------------------------------------------
export GOROOT=/usr/local/go
export GOPATH=~/go
export GOBIN=$GOPATH/bin
alias cdgo="cd $GOPATH"
alias installgopm="go get -u github.com/gpmgo/gopm"

# -------------------------------------------------------------------
# $PATH
# -------------------------------------------------------------------
# Go
export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
# node
export PATH=~/.node/bin:$PATH
# Rust
export PATH=~/.cargo/bin:$PATH

# -------------------------------------------------------------------
# ssh
# -------------------------------------------------------------------
function new-ssh-key(){
    ssh-keygen -t rsa -b 4096 -C $1 && eval "$(ssh-agent -s)"
    ssh-add ~/.ssh/id_rsa
    cat ~/.ssh/id_rsa.pub
}

# -------------------------------------------------------------------
# tar safely with a password (http://www.ha97.com/5114.html)
# -------------------------------------------------------------------
# tarsafe target output password
function tarsafe(){
    tar -zcvf - $1 | openssl des3 -salt -k $3 | dd of=$2
}

# xtar target
function xtar(){
    dd if=$1 | openssl des3 -d | tar zxf -
}

# -------------------------------------------------------------------
# git
# -------------------------------------------------------------------

alias gitup="git add -A; git commit -m"
alias gitconf="vi .git/config"
alias gamend='git add -A && git commit --amend'
alias greset='git reset --hard HEAD'
alias glg='git lg'

alias ga='git add -A'
alias gps='git push'
alias gl='git log'
alias gs='git status'
alias gd='git diff'
alias gm='git commit -m'
alias gma='git commit -am'
alias gb='git branch'
alias gc='git checkout'
alias gra='git remote add'
alias grr='git remote rm'
alias gpl='git pull'
alias gcl='git clone'
alias gta='git tag -a -m'
alias gf='git reflog'

function getgitignore(){
    url="https://raw.githubusercontent.com/github/gitignore/master/$1.gitignore"
    if [ type wget &>/dev/null ]; then
        wget $url -O .gitignore
    else
        curl -sSL $url > .gitignore
    fi
}

alias add-ssh-key='eval "$(ssh-agent -s)" && ssh-add ~/.ssh/id_rsa'

# -------------------------------------------------------------------
# monitoring system
# -------------------------------------------------------------------
function useproxy(){
    export http_proxy=${PROXY}
    export https_proxy=${PROXY}
}
alias noproxy="unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY"
alias up="useproxy"
alias np="noproxy"
#alias fuckgfw='sudo sslocal -c /etc/shadowsocks.json -d start'

alias df="df -h"
alias lsconn="netstat -ntu | awk 'NR>2 {print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr"
alias lsfile="ls -ahlS | grep -v ^d"
alias lsport="netstat apn | grep $1"
alias updatetime="ntpdate asia.pool.ntp.org"
alias freemem="sudo bash -c 'echo 1 > /proc/sys/vm/drop_caches'"
# git status -s | col 2
function col {
  awk -v col=$1 '{print $col}'
}

# -------------------------------------------------------------------
# change color temperature
# -------------------------------------------------------------------
alias protecteye='nohup redshift -l 22.5431:114.0579 &>/dev/null &'

# -------------------------------------------------------------------
# simple python http static server
# -------------------------------------------------------------------
function http(){
    if [ -z $1 ]; then
        port=8080
    else
        port=$1
    fi
    if [ ${port} -lt 1024 ]; then
        sudo python -m SimpleHTTPServer ${port}
    else
        python -m SimpleHTTPServer ${port}
    fi
}

# -------------------------------------------------------------------
# edit
# -------------------------------------------------------------------
alias v="vim"
alias vi="vim"
alias vimrc="vim ~/.vimrc"
alias aliases="vim ~/.aliases"
alias bashrc="vim ~/.bashrc"

function addtohead(){
    sed -i "1s/^/$1\n/" $2
}

# -------------------------------------------------------------------
# docker
# -------------------------------------------------------------------
# docker daemon with proxy
alias ddp="http_proxy=${PROXY} docker daemon"
alias ddnp="unset http_proxy https_proxy; docker daemon"
# 杀死所有正在运行的容器.
alias dockerkill='docker kill $(docker ps -a -q)'
# 删除所有已经停止的容器.
alias dockercleanc='docker rm $(docker ps -a -q)'
# 删除所有未打标签的镜像.
alias dockercleani='docker rmi $(docker images -q -f dangling=true)'
# 删除所有已经停止的容器和未打标签的镜像.
alias dockerclean='dockercleanc || true && dockercleani'

# -------------------------------------------------------------------
# simple install
# -------------------------------------------------------------------
alias installdocker="wget -O- https://get.docker.com/ | sh"
# install from daocloud.io
alias installdaocker="curl -sSL https://get.daocloud.io/docker | sh"

alias installsspy="wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh && chmod +x shadowsocks.sh && ./shadowsocks.sh 2>&1 | tee shadowsocks.log"
alias installssgo="wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-go.sh && chmod +x shadowsocks-go.sh && ./shadowsocks-go.sh 2>&1 | tee shadowsocks-go.log"
alias installssr="wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh && chmod +x shadowsocksR.sh && ./shadowsocksR.sh 2>&1 | tee shadowsocksR.log"

function installpip(){
    if [ ! -e 'get-pip.py' ]; then
        wget https://bootstrap.pypa.io/get-pip.py
    fi
    if [ -z $1 ]; then
        version='2'
    else
        version=$1
    fi
    sudo "python${version}" ./get-pip.py
}

function installnode(){
    node_dir=/usr/local/node
    if [ -e $node_dir ]; then
        read -p "${node_dir} existed, remove it permanently and reinstall? [yes/NO]" remove
        if [ $remove = 'yes' ]; then
            sudo rm -rf $node_dir
        elif [ $remove = 'no' ]; then
            return 1
        fi
    fi

    if [ -z $1 ]; then
        platform='64'
    else
        platform='86'
    fi

    if [ ! -e node*.xz ]; then
        wget https://nodejs.org/dist/v6.9.2/node-v6.9.2-linux-x${platform}.tar.xz
    fi
    sudo tar xf node*.tar.xz -C /usr/local && sudo mv ${node_dir}* ${node_dir}
    cmd='export PATH=/usr/local/node/bin:$PATH'
    sudo sh -c "echo '$cmd' >> /etc/profile"
    export PATH=/usr/local/node/bin:$PATH 
    echo 'Finish!'
}

# -------------------------------------------------------------------
# npm
# -------------------------------------------------------------------
alias npmtaobao="npm config set registry https://registry.npm.taobao.org"
alias npmofficial="npm config delete registry"
function npmls(){
    npm ls --depth 0 $@
}

# -------------------------------------------------------------------
# VPS
# -------------------------------------------------------------------

#unix bench
alias unixbench="wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh && chmod +x unixbench.sh && ./unixbench.sh"

function openport(){
    /sbin/iptables -I INPUT -p udp --dport $1 -j ACCEPT
    /sbin/iptables -I INPUT -p tcp --dport $1 -j ACCEPT

    /etc/init.d/iptables save
    /etc/init.d/iptables restart

    /etc/init.d/iptables status
}

# -------------------------------------------------------------------
# 增加动态性配置
# -------------------------------------------------------------------
if [ -f ~/.userrc ]; then
    . ~/.userrc
fi
# End

